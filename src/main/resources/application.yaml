server:
  port: 8080
management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus

#If you use a database then uncomment below lines and update db properties accordingly
spring:
  config:
    import: "optional:configtree:/mnt/secrets/fact/"
  application:
    name: FACT API
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DATABASE:fact}${DB_OPTIONS:}
    username: ${POSTGRES_USER:fact}
    password: ${POSTGRES_PASSWORD:fact}
    properties:
      charSet: UTF-8
    hikari:
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 10000
      poolName: FactHikariCP
      maxLifetime: 7200000
      connectionTimeout: 30000
  jpa:
    properties:
      hibernate:
        globally_quoted_identifiers: 'true'
        jdbc:
          lob:
            non_contextual_creation: 'true'
    open-in-view: true

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${OAUTH_PROVIDER_URL:https://idam-api.aat.platform.hmcts.net}/jwks
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

hibernate:
  show_sql=true:

dbMigration:
  runOnStartup: ${RUN_DB_MIGRATION_ON_STARTUP:true}



mapit:
  key: ${MAPIT_KEY:}
  url: https://mapit.mysociety.org
  endpoint:
    postcode-search: /postcode
    area-search: /areas
    quota: /quota

launchDarkly:
  sdk-key: ${LAUNCH_DARKLY_SDK_KEY:}

resilience4j:
  ratelimiter:
    instances:
      default:
          limitForPeriod: 15
          limitRefreshPeriod: 1s
          timeoutDuration: 0
